language: c
env:
  global:
   - secure: "T0kfZEvvymfcV4LWvDxafXMYIXlvhgYBWpY8GMKFxx8NBPBZID7wLFEnhiAF/p7gSaW4491mn3aDGA6/l9mJ/2MgXJssBiGh/5Wz+9dUTKH8T176PZI0+hNSkLPI+c/L00sslhhL7ZOF41mQf4VVHUhkIlFtfI9s/5e6iClw3EefSryX4lqmmE7E/aSMuE5fAQYNV48iwwQvZvcWEZ4yg8Cie5nMv6MdFQUZhmnxXZeixQ2JJGx2/nT/AhlvxTNlPXMsS9khWYVCts4DUpdO3qv52Zj1hOB6f7QoqY7qv3RsHFTN+6YsNlgbKCmFV4JDkCZqklQSfiyFB4IqqudH2AGFNhaJw00wb6kk7Kz3l827V36ib7Jgt3jWg+iF6elTrPm/1Friu7VdW2aCxLWtQYVgkW6sl3uWi8W1Uv8nM58vgFzmtJuojts0mfy0Q2sT/2gR/OITIIcfjZZ8X25Dtm9uNh/7wCVAyU19thiTNVQWrykzEZoiJXWkp1TUZQhpT/PpU5ibwumuk2ZgqAzUSYXzxWXk1/qqOkks8bz4LuKqX9uHbePCUHhvJA3DgfR1kajGREjycteoRNvZQyt8l0hP0deCdEVNZe0GY0Ut0dN6EnjuGMszqioF4ozz9Pje4OR/4u8+H1rVFY4VVliVLIawZ+Eusu4rZgl9oSQ8CzY="

addons:
  apt:
    packages:
    - lcov
    - linux-libc-dev
    - libuv1-dev
    - btrfs-progs
    - xfsprogs
    - zfsutils-linux

  coverity_scan:
    build_script_url: https://dl.stgraber.org/coverity_travis.sh
    project:
      name: canonical/raft
      description: "Fully asynchronous C implementation of the Raft consensus protocol"

    # Where email notification of build analysis results will be sent
    notification_email: free.ekanayaka@canonical.com

    build_command_prepend: "autoreconf -i && ./configure"
    build_command: "make"
    branch_pattern: master

jobs:
  include:
  - compiler: gcc
    dist: bionic
    arch: amd64

  - compiler: gcc
    dist: focal
    arch: amd64

  - os: osx
    osx_image: xcode12.2

  - if: type != pull_request
    compiler: clang
    dist: bionic
    arch: amd64

  - if: type != pull_request
    compiler: gcc
    dist: bionic
    arch: s390x

  - if: type != pull_request
    compiler: gcc
    dist: bionic
    arch: arm64

  # Coverity issue is interfering with ppc64le master build
  - if: type == pull_request
    compiler: clang
    dist: bionic
    arch: ppc64le

before_script:
  - git clone --depth 1 https://github.com/edlund/amalgamate.git
  - export PATH=$PATH:$PWD/amalgamate
  - | # Build libuv dependency on MacOS
    if [ $TRAVIS_OS_NAME = 'osx' ]; then
      git clone --depth 1 https://github.com/libuv/libuv.git
      cd libuv
      git checkout v1.41.0
      sh autogen.sh
      ./configure
      make -j8
    fi

script:
  - cd "$TRAVIS_BUILD_DIR"
  - autoreconf -i
  - | # Use built libuv on MacOS
    if [ $TRAVIS_OS_NAME = 'osx' ]; then
      export UV_CFLAGS="-I$(pwd)/libuv/include"
      export UV_LIBS="-L$(pwd)/libuv/.libs -luv"
    fi
  - |
    if [ "$TRAVIS_CPU_ARCH" = "s390x" -o "$TRAVIS_CPU_ARCH" = "arm64" ]; then
      ./configure --enable-example --enable-debug --enable-code-coverage
    else
      ./configure --enable-example --enable-debug $([ $TRAVIS_OS_NAME = 'osx' ] || echo '--enable-code-coverage --enable-sanitize')
    fi
  - amalgamate.py --config=amalgamation.json --source=$(pwd)
  - $CC raft.c -c -D_GNU_SOURCE $([ $TRAVIS_OS_NAME != 'linux' ] || echo '-DHAVE_LINUX_AIO_ABI_H') -Wall -Wextra -Wpedantic -fpic $UV_CFLAGS
  - ./test/lib/fs.sh setup
  - travis_wait 30 make check CFLAGS=-O0 $(./test/lib/fs.sh detect) || (cat ./test-suite.log && false)
  - if [ $TRAVIS_COMPILER = gcc ]; then make code-coverage-capture; fi
  - ./test/lib/fs.sh teardown

after_success:
  - bash <(curl -s https://codecov.io/bash) -G "./src*"
